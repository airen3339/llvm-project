# This file defines a one-off single configuration CI job which can be manually triggered with the various
# knobs and switches that are available in the pre-commit CI.
#
# The purpose of this workflow it to make reproducing non-tested configuration issues easier, and to allow
# for testing of new configurations.
name: Build and Test libc++
on:
  workflow_dispatch:
    inputs:
      configuration:
        description: 'the configuration to build'
        required: true
      cxx:
        description: 'C++ compiler'
        required: true
      cc:
        description: 'C compiler'
        required: true
      enable_clang_tidy:
        description: 'enable clang-tidy'
        required: false
        default: 'OFF'
      std_modules:
        description: 'enable std modules'
        required: false
        default: 'OFF'
      runner:
        description: 'runner to use'
        required: false
        default: 'libcxx-runners-8-set'

permissions:
  contents: read # Default everything to read-only

concurrency:
  group: ${{ github.workflow }}-${{ github.actor }}
  cancel-in-progress: false


env:
  CMAKE: "/opt/bin/cmake"
  # LLVM POST-BRANCH bump version
  # LLVM POST-BRANCH add compiler test for ToT - 1, e.g. "Clang 17"
  # LLVM RELEASE bump remove compiler ToT - 3, e.g. "Clang 15"
  LLVM_HEAD_VERSION: "18"   # Used compiler, update POST-BRANCH.
  LLVM_PREVIOUS_VERSION: "17"
  LLVM_OLDEST_VERSION: "16"
  GCC_STABLE_VERSION: "13"
  LLVM_SYMBOLIZER_PATH: "/usr/bin/llvm-symbolizer-18"
  CLANG_CRASH_DIAGNOSTICS_DIR: "crash_diagnostics"


jobs:
  build-libcxx:
    if: github.repository_owner == 'llvm'
    runs-on: ${{ inputs.runner }}
    steps:
      # FIXME: Change to ./.github/actions/libcxx/run-buildbot
      - uses: libcxx/actions/run-buildbot@main
        with:
          configuration: ${{ matrix.config }}
          cc: ${{ inputs.cc }}
          cxx: ${{ inputs.cxx }}
          enable_clang_tidy: ${{ inputs.clang_tidy }}
          enable_std_modules: ${{ inputs.std_modules }}
