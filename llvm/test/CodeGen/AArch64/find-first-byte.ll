; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -mattr=+sve2 -mtriple=aarch64 -passes='loop(loop-idiom-vectorize),simplifycfg' -S < %s | FileCheck -check-prefix=SVE2 %s
; RUN: opt -mattr=-sve2 -mtriple=aarch64 -passes='loop(loop-idiom-vectorize),simplifycfg' -S < %s | FileCheck -check-prefix=NOSVE2 %s

define dso_local noundef ptr @first_byte_of(ptr %0, ptr %1, ptr %2, ptr %3) #0 {
; SVE2-LABEL: define dso_local noundef ptr @first_byte_of(
; SVE2-SAME: ptr [[TMP0:%.*]], ptr [[TMP1:%.*]], ptr [[TMP2:%.*]], ptr [[TMP3:%.*]]) #[[ATTR0:[0-9]+]] {
; SVE2-NEXT:    [[TMP5:%.*]] = icmp eq ptr [[TMP0]], [[TMP1]]
; SVE2-NEXT:    [[TMP6:%.*]] = icmp eq ptr [[TMP2]], [[TMP3]]
; SVE2-NEXT:    [[TMP7:%.*]] = or i1 [[TMP5]], [[TMP6]]
; SVE2-NEXT:    br i1 [[TMP7]], [[DOTLOOPEXIT1:label %.*]], label %[[DOTPREHEADER:.*]]
; SVE2:       [[_PREHEADER:.*:]]
; SVE2-NEXT:    [[PNA:%.*]] = phi ptr [ [[TMP10:%.*]], %[[TMP18:.*]] ], [ [[TMP0]], [[TMP4:%.*]] ]
; SVE2-NEXT:    [[TMP8:%.*]] = icmp ult ptr [[PNA]], [[TMP1]]
; SVE2-NEXT:    br i1 [[TMP8]], label %[[BB9:.*]], [[DOTLOOPEXIT1]]
; SVE2:       [[BB9]]:
; SVE2-NEXT:    [[TMP10]] = getelementptr inbounds i8, ptr [[PNA]], i64 16
; SVE2-NEXT:    [[TMP11:%.*]] = icmp ugt ptr [[TMP10]], [[TMP1]]
; SVE2-NEXT:    [[TMP12:%.*]] = select i1 [[TMP11]], ptr [[TMP1]], ptr [[TMP10]]
; SVE2-NEXT:    [[TMP13:%.*]] = ptrtoint ptr [[PNA]] to i64
; SVE2-NEXT:    [[TMP14:%.*]] = ptrtoint ptr [[TMP12]] to i64
; SVE2-NEXT:    [[TMP15:%.*]] = call <vscale x 16 x i1> @llvm.get.active.lane.mask.nxv16i1.i64(i64 [[TMP13]], i64 [[TMP14]])
; SVE2-NEXT:    [[TMP16:%.*]] = call <vscale x 16 x i8> @llvm.masked.load.nxv16i8.p0(ptr [[PNA]], i32 1, <vscale x 16 x i1> [[TMP15]], <vscale x 16 x i8> zeroinitializer)
; SVE2-NEXT:    [[TMP17:%.*]] = call <vscale x 16 x i1> @llvm.get.active.lane.mask.nxv16i1.i64(i64 0, i64 16)
; SVE2-NEXT:    br label %[[TMP18]]
; SVE2:       [[TMP18]]:
; SVE2-NEXT:    [[PNB:%.*]] = phi ptr [ [[TMP2]], %[[BB9]] ], [ [[TMP22:%.*]], %[[TMP33:.*]] ]
; SVE2-NEXT:    [[TMP19:%.*]] = phi <vscale x 16 x i1> [ [[TMP17]], %[[BB9]] ], [ [[TMP34:%.*]], %[[TMP33]] ]
; SVE2-NEXT:    [[TMP20:%.*]] = icmp ult ptr [[PNB]], [[TMP3]]
; SVE2-NEXT:    br i1 [[TMP20]], label %[[BB21:.*]], label %[[DOTPREHEADER]]
; SVE2:       [[BB21]]:
; SVE2-NEXT:    [[TMP22]] = getelementptr inbounds i8, ptr [[PNB]], i64 16
; SVE2-NEXT:    [[TMP23:%.*]] = icmp ugt ptr [[TMP22]], [[TMP3]]
; SVE2-NEXT:    br i1 [[TMP23]], label %[[BB26:.*]], label %[[BB24:.*]]
; SVE2:       [[BB24]]:
; SVE2-NEXT:    [[TMP25:%.*]] = call <vscale x 16 x i8> @llvm.masked.load.nxv16i8.p0(ptr [[PNB]], i32 1, <vscale x 16 x i1> [[TMP19]], <vscale x 16 x i8> zeroinitializer)
; SVE2-NEXT:    br label %[[TMP33]]
; SVE2:       [[BB26]]:
; SVE2-NEXT:    [[TMP27:%.*]] = ptrtoint ptr [[PNB]] to i64
; SVE2-NEXT:    [[TMP28:%.*]] = ptrtoint ptr [[TMP3]] to i64
; SVE2-NEXT:    [[TMP29:%.*]] = call <vscale x 16 x i1> @llvm.get.active.lane.mask.nxv16i1.i64(i64 [[TMP27]], i64 [[TMP28]])
; SVE2-NEXT:    [[TMP30:%.*]] = call <vscale x 16 x i8> @llvm.masked.load.nxv16i8.p0(ptr [[PNB]], i32 1, <vscale x 16 x i1> [[TMP29]], <vscale x 16 x i8> zeroinitializer)
; SVE2-NEXT:    [[TMP31:%.*]] = extractelement <vscale x 16 x i8> [[TMP30]], i64 0
; SVE2-NEXT:    [[DOTSPLATINSERT:%.*]] = insertelement <vscale x 16 x i8> poison, i8 [[TMP31]], i64 0
; SVE2-NEXT:    [[DOTSPLAT:%.*]] = shufflevector <vscale x 16 x i8> [[DOTSPLATINSERT]], <vscale x 16 x i8> poison, <vscale x 16 x i32> zeroinitializer
; SVE2-NEXT:    [[TMP32:%.*]] = select <vscale x 16 x i1> [[TMP29]], <vscale x 16 x i8> [[TMP30]], <vscale x 16 x i8> [[DOTSPLAT]]
; SVE2-NEXT:    br label %[[TMP33]]
; SVE2:       [[TMP33]]:
; SVE2-NEXT:    [[TMP34]] = phi <vscale x 16 x i1> [ [[TMP19]], %[[BB24]] ], [ [[TMP29]], %[[BB26]] ]
; SVE2-NEXT:    [[TMP35:%.*]] = phi <vscale x 16 x i8> [ [[TMP25]], %[[BB24]] ], [ [[TMP32]], %[[BB26]] ]
; SVE2-NEXT:    [[TMP36:%.*]] = call <vscale x 16 x i1> @llvm.experimental.vector.match.nxv16i8(<vscale x 16 x i8> [[TMP16]], <vscale x 16 x i8> [[TMP35]], <vscale x 16 x i1> [[TMP15]], i32 16)
; SVE2-NEXT:    [[TMP37:%.*]] = call i1 @llvm.vector.reduce.or.nxv16i1(<vscale x 16 x i1> [[TMP36]])
; SVE2-NEXT:    br i1 [[TMP37]], label %[[DOTLOOPEXIT:.*]], label %[[TMP18]]
; SVE2:       [[_LOOPEXIT:.*:]]
; SVE2-NEXT:    [[TMP38:%.*]] = call i64 @llvm.experimental.cttz.elts.i64.nxv16i1(<vscale x 16 x i1> [[TMP36]], i1 true)
; SVE2-NEXT:    [[TMP39:%.*]] = getelementptr i8, ptr [[PNA]], i64 [[TMP38]]
; SVE2-NEXT:    br [[DOTLOOPEXIT1]]
; SVE2:       [[_LOOPEXIT1:.*:]]
; SVE2-NEXT:    [[TMP40:%.*]] = phi ptr [ [[TMP1]], [[TMP4]] ], [ [[TMP39]], %[[DOTLOOPEXIT]] ], [ [[TMP1]], %[[DOTPREHEADER]] ]
; SVE2-NEXT:    ret ptr [[TMP40]]
;
; NOSVE2-LABEL: define dso_local noundef ptr @first_byte_of(
; NOSVE2-SAME: ptr [[TMP0:%.*]], ptr [[TMP1:%.*]], ptr [[TMP2:%.*]], ptr [[TMP3:%.*]]) #[[ATTR0:[0-9]+]] {
; NOSVE2-NEXT:    [[TMP5:%.*]] = icmp eq ptr [[TMP0]], [[TMP1]]
; NOSVE2-NEXT:    [[TMP6:%.*]] = icmp eq ptr [[TMP2]], [[TMP3]]
; NOSVE2-NEXT:    [[TMP7:%.*]] = or i1 [[TMP5]], [[TMP6]]
; NOSVE2-NEXT:    br i1 [[TMP7]], [[DOTLOOPEXIT:label %.*]], label %[[DOTPREHEADER:.*]]
; NOSVE2:       [[_LOOPEXIT:.*:]]
; NOSVE2-NEXT:    [[TMP8:%.*]] = phi ptr [ [[TMP18:%.*]], %[[TMP17:.*]] ], [ [[TMP0]], [[TMP4:%.*]] ]
; NOSVE2-NEXT:    [[TMP9:%.*]] = load i8, ptr [[TMP8]], align 1
; NOSVE2-NEXT:    br label %[[BB13:.*]]
; NOSVE2:       [[BB10:.*]]:
; NOSVE2-NEXT:    [[TMP11:%.*]] = getelementptr inbounds i8, ptr [[TMP14:%.*]], i64 1
; NOSVE2-NEXT:    [[TMP12:%.*]] = icmp eq ptr [[TMP11]], [[TMP3]]
; NOSVE2-NEXT:    br i1 [[TMP12]], label %[[TMP17]], label %[[BB13]]
; NOSVE2:       [[BB13]]:
; NOSVE2-NEXT:    [[TMP14]] = phi ptr [ [[TMP2]], %[[DOTPREHEADER]] ], [ [[TMP11]], %[[BB10]] ]
; NOSVE2-NEXT:    [[TMP15:%.*]] = load i8, ptr [[TMP14]], align 1
; NOSVE2-NEXT:    [[TMP16:%.*]] = icmp eq i8 [[TMP9]], [[TMP15]]
; NOSVE2-NEXT:    br i1 [[TMP16]], [[DOTLOOPEXIT]], label %[[BB10]]
; NOSVE2:       [[TMP17]]:
; NOSVE2-NEXT:    [[TMP18]] = getelementptr inbounds i8, ptr [[TMP8]], i64 1
; NOSVE2-NEXT:    [[TMP19:%.*]] = icmp eq ptr [[TMP18]], [[TMP1]]
; NOSVE2-NEXT:    br i1 [[TMP19]], [[DOTLOOPEXIT]], label %[[DOTPREHEADER]]
; NOSVE2:       [[_LOOPEXIT2:.*:]]
; NOSVE2-NEXT:    [[TMP40:%.*]] = phi ptr [ [[TMP1]], [[TMP4]] ], [ [[TMP8]], %[[BB13]] ], [ [[TMP1]], %[[TMP17]] ]
; NOSVE2-NEXT:    ret ptr [[TMP40]]
;
  %5 = icmp eq ptr %0, %1
  %6 = icmp eq ptr %2, %3
  %7 = or i1 %5, %6
  br i1 %7, label %21, label %8

8:
  %9 = phi ptr [ %19, %18 ], [ %0, %4 ]
  %10 = load i8, ptr %9, align 1
  br label %14

11:
  %12 = getelementptr inbounds i8, ptr %15, i64 1
  %13 = icmp eq ptr %12, %3
  br i1 %13, label %18, label %14

14:
  %15 = phi ptr [ %2, %8 ], [ %12, %11 ]
  %16 = load i8, ptr %15, align 1
  %17 = icmp eq i8 %10, %16
  br i1 %17, label %21, label %11

18:
  %19 = getelementptr inbounds i8, ptr %9, i64 1
  %20 = icmp eq ptr %19, %1
  br i1 %20, label %21, label %8

21:
  %22 = phi ptr [ %1, %4 ], [ %9, %14 ], [ %1, %18 ]
  ret ptr %22
}

attributes #0 = { "target-features"="+sve2" }
